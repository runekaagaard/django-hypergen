{"version":3,"sources":["node_modules/morphdom/dist/morphdom-esm.js","hypergen.js"],"names":["morphdom","range","DOCUMENT_FRAGMENT_NODE","morphAttrs","fromNode","toNode","toNodeAttrs","attr","attrName","attrNamespaceURI","attrValue","attributes","nodeType","i","length","name","namespaceURI","value","localName","getAttributeNS","prefix","setAttributeNS","getAttribute","setAttribute","fromNodeAttrs","d","hasAttributeNS","removeAttributeNS","hasAttribute","removeAttribute","NS_XHTML","doc","document","undefined","HAS_TEMPLATE_SUPPORT","createElement","HAS_RANGE_SUPPORT","createRange","createFragmentFromTemplate","str","template","innerHTML","content","childNodes","createFragmentFromRange","fragment","selectNode","body","createContextualFragment","createFragmentFromWrap","toElement","trim","compareNodeNames","fromEl","toEl","fromNodeName","fromCodeStart","toCodeStart","nodeName","toNodeName","charCodeAt","toUpperCase","createElementNS","moveChildren","curChild","firstChild","nextChild","nextSibling","appendChild","syncBooleanAttrProp","specialElHandlers","OPTION","parentNode","parentName","selected","selectedIndex","INPUT","TEXTAREA","newValue","oldValue","nodeValue","placeholder","SELECT","optgroup","ELEMENT_NODE","DOCUMENT_FRAGMENT_NODE$1","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","node","id","morphdomFactory","options","toNodeHtml","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","Object","create","keyedRemovalList","addKeyedRemoval","key","push","removeNode","skipKeyedNodes","removeChild","walkDiscardedChildNodes","handleNodeAdded","el","unmatchedFromEl","replaceChild","morphEl","toElKey","morphChildren","curToNodeChild","curToNodeKey","curFromNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curFromNodeChild","outer","isSameNode","curFromNodeType","isCompatible","insertBefore","onBeforeNodeAddedResult","actualize","ownerDocument","cleanupFromEl","specialElHandler","indexTree","morphedNode","morphedNodeType","toNodeType","len","elToRemove","window","hypergen","Array","isArray","obj","prototype","toString","call","morph","html","element","getElementById","focused","activeElement","type","files","mergeAttrs","script","forEach","replaceWith","indexOf","autofocus","querySelectorAll","focus","console","error","remove","hide","style","display","visible","visibility","hidden","redirect","url","location","append","prepend","clientState","setClientState","at","split","path","assign","log","INTERVALS","intervalSet","commands","interval","setInterval","applyCommands","intervalClear","clearInterval","addEventListener","querySelectorString","querySelector","event","_TTT","keypressToCallbackFunc","e","args","callback","keypressToCallback","keypressToCallbackRemove","removeEventListener","isBlocked","debounce","confirm_","blocks","uploadFiles","params","meta","clear","elementId","debug","headers","onSucces","preventDefault","stopPropagation","postIt","func","startsWith","json","JSON","stringify","MISSING_ELEMENT_EXCEPTION","warn","hypergen_websockets","WEBSOCKETS","send","hypergenGlobalFormdata","FormData","hypergenUploadFiles","formData","post","data","jsonOk","xhr","getResponseHeader","getElementsByTagName","confirm","throttle","delay","group","partialLoad","pushState","history","callback_url","onpushstate","forward","_THROTTLE_GROUPS","clearTimeout","setTimeout","cancelThrottle","require_","module","require","resolvePath","parts","part","bind","applyCommand","rpath","result","CustomEvent","detail","dispatchEvent","callbackKey","when","eventHandlerCallbacks","_","target","source","getAttributeNames","coerce","no","int","parseInt","isNaN","float","parseFloat","date","datetime","time","month","year","week","replace","read","checked","radio","file","contenteditable","keycode","code","valueFunc","coerceFunc","toJSON","reviver","k","v","getCookie","cookieValue","cookie","cookies","substring","decodeURIComponent","addParams","ret","encodeURIComponent","join","onSuccess","onError","XMLHttpRequest","progressBar","upload","onload","status","response","onerror","onabort","onprogress","loaded","total","parse","responseText","readyState","open","setRequestHeader","parent","pathname","state","href","pushstate","Event","ready","fn","partial","attachEvent"],"mappings":"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","file":"hypergen.min.js","sourceRoot":"","sourcesContent":["var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n      return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = Object.create(null);\n        var keyedRemovalList = [];\n\n        function addKeyedRemoval(key) {\n            keyedRemovalList.push(key);\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    // if we find a duplicate #id node in cache, replace `el` with cache value\n                    // and morph it to the child node.\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    } else {\n                      handleNodeAdded(curChild);\n                    }\n                } else {\n                  // recursively call for curChild and it's children to see if we find something in\n                  // fromNodesLookup\n                  handleNodeAdded(curChild);\n                }\n\n                curChild = nextSibling;\n            }\n        }\n\n        function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n            // We have processed all of the \"to nodes\". If curFromNodeChild is\n            // non-null then we still have some from nodes left over that need\n            // to be removed\n            while (curFromNodeChild) {\n                var fromNextSibling = curFromNodeChild.nextSibling;\n                if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                    // Since the node is keyed it might be matched up later so we defer\n                    // the actual removal to later\n                    addKeyedRemoval(curFromNodeKey);\n                } else {\n                    // NOTE: we skip nested keyed nodes from being removed since there is\n                    //       still a chance they will be matched up later\n                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                }\n                curFromNodeChild = fromNextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n              morphChildren(fromEl, toEl);\n            } else {\n              specialElHandlers.TEXTAREA(fromEl, toEl);\n            }\n        }\n\n        function morphChildren(fromEl, toEl) {\n            var curToNodeChild = toEl.firstChild;\n            var curFromNodeChild = fromEl.firstChild;\n            var curToNodeKey;\n            var curFromNodeKey;\n\n            var fromNextSibling;\n            var toNextSibling;\n            var matchingFromEl;\n\n            // walk the children\n            outer: while (curToNodeChild) {\n                toNextSibling = curToNodeChild.nextSibling;\n                curToNodeKey = getNodeKey(curToNodeChild);\n\n                // walk the fromNode children all the way through\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n\n                    if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                    var curFromNodeType = curFromNodeChild.nodeType;\n\n                    // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n                    var isCompatible = undefined;\n\n                    if (curFromNodeType === curToNodeChild.nodeType) {\n                        if (curFromNodeType === ELEMENT_NODE) {\n                            // Both nodes being compared are Element nodes\n\n                            if (curToNodeKey) {\n                                // The target node has a key so we want to match it up with the correct element\n                                // in the original DOM tree\n                                if (curToNodeKey !== curFromNodeKey) {\n                                    // The current element in the original DOM tree does not have a matching key so\n                                    // let's check our lookup to see if there is a matching element in the original\n                                    // DOM tree\n                                    if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                        if (fromNextSibling === matchingFromEl) {\n                                            // Special case for single element removals. To avoid removing the original\n                                            // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                            // we will instead discard the current node and wait until the next\n                                            // iteration to properly match up the keyed target element with its matching\n                                            // element in the original tree\n                                            isCompatible = false;\n                                        } else {\n                                            // We found a matching keyed element somewhere in the original DOM tree.\n                                            // Let's move the original DOM node into the current position and morph\n                                            // it.\n\n                                            // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                            // the `removeNode()` function for the node that is being discarded so that\n                                            // all lifecycle hooks are correctly invoked\n                                            fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                            // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                            if (curFromNodeKey) {\n                                                // Since the node is keyed it might be matched up later so we defer\n                                                // the actual removal to later\n                                                addKeyedRemoval(curFromNodeKey);\n                                            } else {\n                                                // NOTE: we skip nested keyed nodes from being removed since there is\n                                                //       still a chance they will be matched up later\n                                                removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                            }\n\n                                            curFromNodeChild = matchingFromEl;\n                                        }\n                                    } else {\n                                        // The nodes are not compatible since the \"to\" node has a key and there\n                                        // is no matching keyed node in the source tree\n                                        isCompatible = false;\n                                    }\n                                }\n                            } else if (curFromNodeKey) {\n                                // The original has a key\n                                isCompatible = false;\n                            }\n\n                            isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                            if (isCompatible) {\n                                // We found compatible DOM elements so transform\n                                // the current \"from\" node to match the current\n                                // target DOM node.\n                                // MORPH\n                                morphEl(curFromNodeChild, curToNodeChild);\n                            }\n\n                        } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                            // Both nodes being compared are Text or Comment nodes\n                            isCompatible = true;\n                            // Simply update nodeValue on the original node to\n                            // change the text value\n                            if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                            }\n\n                        }\n                    }\n\n                    if (isCompatible) {\n                        // Advance both the \"to\" child and the \"from\" child since we found a match\n                        // Nothing else to do as we already recursively called morphChildren above\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    // No compatible match so remove the old node from the DOM and continue trying to find a\n                    // match in the original DOM. However, we only do this if the from node is not keyed\n                    // since it is possible that a keyed node might match up with a node somewhere else in the\n                    // target tree and we don't want to discard it just yet since it still might find a\n                    // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                    // that didn't find a home\n                    if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n\n                    curFromNodeChild = fromNextSibling;\n                } // END: while(curFromNodeChild) {}\n\n                // If we got this far then we did not find a candidate match for\n                // our \"to node\" and we exhausted all of the children \"from\"\n                // nodes. Therefore, we will just append the current \"to\" node\n                // to the end\n                if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                    fromEl.appendChild(matchingFromEl);\n                    // MORPH\n                    morphEl(matchingFromEl, curToNodeChild);\n                } else {\n                    var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                    if (onBeforeNodeAddedResult !== false) {\n                        if (onBeforeNodeAddedResult) {\n                            curToNodeChild = onBeforeNodeAddedResult;\n                        }\n\n                        if (curToNodeChild.actualize) {\n                            curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                        }\n                        fromEl.appendChild(curToNodeChild);\n                        handleNodeAdded(curToNodeChild);\n                    }\n                }\n\n                curToNodeChild = toNextSibling;\n                curFromNodeChild = fromNextSibling;\n            }\n\n            cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n                return;\n            }\n\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n","import morphdom from 'morphdom'\nimport './hypergen'\nimport * as hypergen from './hypergen'\n\n// Make all exported vars availabe in window.hypergen.\nwindow.hypergen = hypergen\n\n// Shims\nif (typeof Array.isArray === 'undefined') {\n  Array.isArray = function(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n  }\n}\n\n// Commands that can be called from the backend.\nexport const morph = function(id, html) {\n  const element = document.getElementById(id)\n  if (!element) {\n    console.error(\"Trying to morph into an element with id='\" + id + \"' that does not exist. Please check your target_id.\")\n    return\n  }\n  morphdom(\n    element,\n    \"<div>\" + html + \"</div>\",\n    {\n      childrenOnly: true,\n      onBeforeElUpdated: function(fromEl, toEl) {\n        let focused = document.activeElement\n        if((fromEl.nodeName == \"INPUT\" || fromEl.nodeName == \"TEXTAREA\") && fromEl === focused) {\n          let types = [\"checkbox\", \"radio\"]\n          if (fromEl.nodeName === \"INPUT\" && types.indexOf(fromEl.type) !== -1) {\n            return true\n          }\n          mergeAttrs(fromEl, toEl)\n          return false\n        } else if (fromEl.nodeName == \"INPUT\" && fromEl.type === \"file\" && fromEl.files.length > 0) {\n          mergeAttrs(fromEl, toEl)\n          return false\n        } else if (fromEl.nodeName === \"SCRIPT\" && toEl.nodeName === \"SCRIPT\") {\n            var script = document.createElement('script');\n            //copy over the attributes\n            [...toEl.attributes].forEach( attr => { script.setAttribute(attr.nodeName ,attr.nodeValue) })\n            script.innerHTML = toEl.innerHTML;\n            fromEl.replaceWith(script)\n            return false;\n        } else {\n          return true\n        }\n      },\n      onNodeAdded: function (node) {\n        if (node.nodeName === 'SCRIPT') {\n          var script = document.createElement('script');\n          //copy over the attributes\n          [...node.attributes].forEach( attr => { script.setAttribute(attr.nodeName ,attr.nodeValue) })\n          script.innerHTML = node.innerHTML;\n          node.replaceWith(script)\n        }\n      },\n    }\n  )\n\n  const autofocus = document.querySelectorAll('[autofocus]')[0]\n  if (autofocus !== undefined) autofocus.focus()\n}\n\nexport const remove = function(id) {\n  let el = document.getElementById(id);\n  el.parentNode.removeChild(el)\n}\n\nexport const hide = function(id) {\n  let el = document.getElementById(id)\n  el.style.display = \"none\"\n}\n\nexport const display = function(id, value) {\n  let el = document.getElementById(id)\n  el.style.display = value || \"block\"\n}\n\nexport const visible = function(id, value) {\n  let el = document.getElementById(id)\n  el.style.visibility = \"visible\"\n}\n\nexport const hidden = function(id, value) {\n  let el = document.getElementById(id)\n  el.style.visibility = \"hidden\"\n}\n\nexport const redirect = function(url) {\n  window.location = url\n}\n\nexport const append = function(id, html) {\n  const el = document.getElementById(id)\n  if (!el) console.error(\"Cannot append to missing element\", id)\n  el.innerHTML += html\n}\n\nexport const prepend = function(id, html) {\n  const el = document.getElementById(id)\n  if (!el) console.error(\"Cannot prepend to missing element\", id)\n  el.innerHTML = html + el.innerHTML\n}\n\nhypergen.clientState = {}\n\nexport const setClientState = function(at, value) {\n  let clientState = hypergen.clientState\n  for (const path of at.split(\".\")) {\n    if (clientState[path] === undefined) clientState[path] = {}\n    clientState = clientState[path]\n  }\n  Object.assign(clientState, value)\n  console.log(\"Setting new state for hypergen.clientState\", at, \"with value\", value, \"giving\",\n              hypergen.clientState)\n}\n\n/* WARNING NOT STABLE */\nvar INTERVALS = {}\n\nexport const intervalSet = function(commands, interval, name) {\n  const i = setInterval(() => applyCommands(commands), interval)\n  if (!!name) INTERVALS[name] = i\n}\n\nexport const intervalClear = function(name) {\n  console.error(\"Clearing\", INTERVALS[name])\n  if (INTERVALS[name]) clearInterval(INTERVALS[name])\n}\n\nexport const addEventListener = function(querySelectorString, type, commands, options) {\n  document.querySelector(querySelectorString).addEventListener(\n    type, (event) => applyCommands(commands), options || {})\n}\n\nlet _TTT = {}\n\nconst keypressToCallbackFunc = function(e) {\n  const [url, args, options] = _TTT\n  callback(url, [e.key, ...(args || [])], options || {})\n}\nexport const keypressToCallback = function(url, args, options) {\n  _TTT = [url, args, options]\n  window.addEventListener(\"keydown\", keypressToCallbackFunc)\n}\nexport const keypressToCallbackRemove = function(url, args, options) {\n  window.removeEventListener(\"keydown\", keypressToCallbackFunc)\n}\n/* END WARNING STABLE AGAIN */\n\n// Callback\nvar i = 0\nvar isBlocked = false\nexport const callback = function(url, args, {debounce=0, confirm_=false, blocks=false, uploadFiles=false,\n                                             params={}, meta={}, clear=false, elementId=null, debug=false,\n                                             event=null, headers={}, onSucces=null}={})\n{\n  if (!!event) {\n    event.preventDefault()\n    event.stopPropagation()\n  }\n  let postIt = function() {\n    let json\n    console.log(\"REQUEST\", url, args, debounce)\n    i++\n\n    // The element function must have access to the FormData.\n    hypergen.hypergenGlobalFormdata = new FormData()\n    hypergen.hypergenUploadFiles = uploadFiles\n    try {\n      json = JSON.stringify({\n        args: args,\n        meta: meta,\n      })\n    } catch(error) {\n      if (error === MISSING_ELEMENT_EXCEPTION) {\n        console.warn(\"An element is missing. This can happen if a dom element has multiple event handlers.\", url)\n        return\n      } else {\n        throw(error)\n      }\n    }\n    \n    let formData = hypergen.hypergenGlobalFormdata\n    hypergen.hypergenGlobalFormdata = null\n    hypergen.hypergenUploadFiles = null\n    formData.append(\"hypergen_data\", json)\n\n    if (blocks === true) {\n      if (isBlocked === true) {\n        console.error(\"Callback was blocked\")\n        return\n      } else {\n        isBlocked = true\n      }\n    }\n    post(url, formData, (data) => {\n      if (data !== null) applyCommands(data)\n      isBlocked = false\n      if (clear === true) document.getElementById(elementId).value = \"\"\n      if (!!onSucces) onSucces()\n    }, (data, jsonOk, xhr) => {\n      console.log(xhr)\n      isBlocked = false\n      console.error(\"Hypergen post error occured\", data)\n      if (debug !== true) {\n        if (xhr.getResponseHeader(\"Content-Type\") === \"text/plain\") {\n          data = \"<pre><code>\" + data + \"</pre></code>\"\n        }\n        document.getElementsByTagName(\"html\")[0].innerHTML = data\n      }\n    }, params, headers)\n  }\n  const postItWebsocket = function() {\n    console.log(\"WEBSOCKET\", url, args, debounce)\n    let json\n    try {\n      json = JSON.stringify({\n        args: args,\n        meta: meta,\n      })\n    } catch(error) {\n      if (error === MISSING_ELEMENT_EXCEPTION) {\n        console.warn(\"An element is missing. This can happen if a dom element has multiple event handlers.\", url)\n        return\n      } else {\n        throw(error)\n      }\n    }\n    if (!hypergen_websockets.WEBSOCKETS[url]) {\n      console.error(\"Cannot send WS to non existing connection:\", url)\n      return\n    }\n    hypergen_websockets.WEBSOCKETS[url].send(json)\n    if (clear === true) document.getElementById(elementId).value = \"\"\n    \n  }\n\n  const func = (url.startsWith(\"ws://\") || url.startsWith(\"wss://\")) ? postItWebsocket : postIt\n  \n  if (debounce === 0) {\n    if (confirm_ === false) func()\n    else if (confirm(confirm_)) func()\n  }\n  else throttle(func, {delay: debounce, group: url, confirm_}) \n}\n\nexport const partialLoad = function(event, url, pushState) {\n  console.log(\"partialLoad to\", url, pushState)\n  callback(url, [], {'event': event, 'headers': {'X-Hypergen-Partial': '1'}, onSucces: function() {\n    if (!!pushState) {\n      console.log(\"pushing state!\")\n      history.pushState({callback_url: url}, \"\", url)\n      onpushstate()\n      history.forward()\n    }\n  }})\n}\n\n// Timing\nvar _THROTTLE_GROUPS = {}\nexport let throttle = function (func, {delay=0, group='global', confirm_=false}={}) {\n  if (_THROTTLE_GROUPS[group]) {\n    clearTimeout(_THROTTLE_GROUPS[group])\n    _THROTTLE_GROUPS[group] = null\n  }\n\n  _THROTTLE_GROUPS[group] = setTimeout(function () {\n      if (confirm_ === false) {\n        func()\n      } else {\n        const confirmed = confirm(confirm_)\n        if (confirmed === true) {\n          func()\n        }\n      }\n      _THROTTLE_GROUPS[group] = null\n    }, delay)\n}\n\nexport let cancelThrottle = function(group) {\n  if (_THROTTLE_GROUPS[group]) {\n    clearTimeout(_THROTTLE_GROUPS[group])\n    _THROTTLE_GROUPS[group] = null\n  }\n}\n\n// Internal\n\nconst require_ = function(module) {\n  try {\n    return require(module)\n  } catch(e) {\n    return false\n  }\n}\n\nconst resolvePath = function(path) {\n  const parts = path.split(\".\")\n  let i = -1, obj = null\n  for (let part of parts) {\n    i++\n    if (i === 0) {\n      if (window[part] !== undefined) obj = window[part]\n      else if (obj = require_(part)) null\n      else if (obj = require_(\"./\" + part)) null\n      else throw \"Could not resolve path: \" + path\n    } else {\n      if (obj[part] !== undefined) {\n        try {\n          obj = obj[part].bind(obj)\n        } catch(e) {\n          obj = obj[part]\n        }\n      }\n      else throw \"Could not resolve path: \" + path\n    }\n  }\n  return obj\n}\n\nconst applyCommand = function(path, ...args) {\n  console.log(\"apply command\", path, args)\n  let rpath = resolvePath(path)\n  const result = rpath(...args)\n  const event = new CustomEvent('hypergen.applyCommand.after', {detail: {path, args}})\n  document.dispatchEvent(event)\n  return result\n}\n\nexport const event = function(event, callbackKey, when) {\n  event.preventDefault()\n  event.stopPropagation()\n  if (!!when && !applyCommand(...when, event)) return\n  applyCommand(...hypergen.clientState.hypergen.eventHandlerCallbacks[callbackKey])\n}\n\nexport const applyCommands = function(commands) {\n  if (!!commands._ && commands._.length === 2 && commands._[0] === \"deque\") {\n    commands = commands._[1]\n  }\n  for (let [path, ...args] of commands) {\n    applyCommand(path, ...args)\n  }\n}\n\nconst mergeAttrs = function(target, source){\n  source.getAttributeNames().forEach(name => {\n    let value = source.getAttribute(name)\n    target.setAttribute(name, value)\n  })\n}\n\nconst MISSING_ELEMENT_EXCEPTION = \"MISSING_ELEMENT_EXCEPTION\" \n\n// coerce functions\nexport const coerce = {}\ncoerce.no = function(value) {\n  if (value === \"\") return null\n  return value\n}\ncoerce.str = function(value) {\n  if (value === \"\") return null\n  return value === null ? null : \"\" + value\n}\ncoerce.int = function(value) {\n  if (value === \"\") return null\n  value = parseInt(value)\n  if (isNaN(value)) return null\n  else return value\n}\ncoerce.float = function(value) {\n  if (value === \"\") return null\n  value = parseFloat(value)\n  if (isNaN(value)) return null\n  else return {_: [\"float\", value]}\n}\ncoerce.date = function(value) {\n  if (value === \"\") return null\n  else return {_: [\"date\", value]}\n}\ncoerce.datetime = function(value) {\n  if (value === \"\") return null\n  else return {_: [\"datetime\", value]}\n}\ncoerce.time = function(value) {\n  if (value === \"\") return null\n  else return {_: [\"time\", value]}\n}\ncoerce.month = function(value) {\n  if (value === \"\") return null\n  const parts = value.split(\"-\")\n  return {year: parseInt(parts[0]), month: parseInt(parts[1])}\n}\ncoerce.week = function(value) {\n  if (value === \"\") return null\n  const parts = value.split(\"-\")\n  return {year: parseInt(parts[0]), week: parseInt(parts[1].replace(\"W\", \"\"))}\n}\n\n\n// DOM element value readers\nexport const read = {}\nread.value = function(id) { // value attribute\n  const el = document.getElementById(id)\n  if (el === null) {\n    throw MISSING_ELEMENT_EXCEPTION\n  }\n  return el.value.trim()\n}\nread.checked = function(id) { // checkbox\n  const el = document.getElementById(id)\n  if (el === null) {\n    throw MISSING_ELEMENT_EXCEPTION\n  }\n  return el.checked\n}\nread.radio = function(id) { // radio button. Uses name attribute for value.\n  const el = document.getElementById(id)\n  if (el === null) {\n    throw MISSING_ELEMENT_EXCEPTION\n  }\n  const checked = document.querySelector(\"input[type=radio][name=\" + el.name + \"]:checked\")\n  return checked === null ? null : checked.value\n}\nread.file = function(id, formData) { // file upload\n  const el = document.getElementById(id)\n  if (el === null) {\n    throw MISSING_ELEMENT_EXCEPTION\n  }\n  if (el.files.length !== 1) return null\n  if (hypergen.hypergenUploadFiles === true) formData.append(id, el.files[0])\n  return el.files[0].name\n}\nread.contenteditable = function(id, formData) { // file upload\n  const el = document.getElementById(id)\n  if (el === null) {\n    throw MISSING_ELEMENT_EXCEPTION\n  }\n  return el.innerHTML\n}\n\n// When functions\nexport const when = {}\nwhen.keycode = function(keycode, event) {\n  return event.code == keycode\n}\n\nexport const element = function(valueFunc, coerceFunc, id) {\n  this.toJSON = function() {\n    const value = resolvePath(valueFunc)(id, hypergen.hypergenGlobalFormdata)\n    if (!!coerceFunc) return resolvePath(coerceFunc)(value)\n    else return coerce.no(value)\n  }\n  return this\n}\n\nexport const reviver = function(k, v) {\n  if (Array.isArray(v)) {\n    if (v.length === 3 && v[0] === \"_\") {\n      if(v[1] === \"element_value\") {\n        return new element(...v[2])\n      }\n    }\n  }\n  return v\n}\n\nconst getCookie = function(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nfunction addParams(url, params) {\n  const ret = []\n  for (let d in params)\n    ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(params[d]))\n  if (ret.length === 0) return url\n  else return url + \"?\" + ret.join('&')\n}\n\nconst post = function(url, formData, onSuccess, onError, params, headers) {\n  url = addParams(url, params)\n  \n  const xhr = new XMLHttpRequest()\n  const progressBar = document.getElementById(\"hypergen-upload-progress-bar\")\n\n  if (progressBar !== null) {\n    xhr.upload.onload = () => {\n      progressBar.style.visibility = \"hidden\"\n      console.log(`The upload is completed: ${xhr.status} ${xhr.response}`)\n    }\n\n    xhr.upload.onerror = () => {\n      progressBar.style.visibility = \"hidden\"\n      console.error('Upload failed.')\n\n    }\n\n    xhr.upload.onabort = () => {\n      progressBar.style.visibility = \"hidden\"\n      console.error('Upload cancelled.')\n    }\n\n    xhr.upload.onprogress = (event) => {\n      progressBar.style.visibility = \"visible\"\n      progressBar.value = event.loaded / event.total\n      console.log(`Uploaded ${event.loaded} of ${event.total} bytes`)\n    }\n  }\n\n  xhr.onload = () => {\n    var jsonOk = false,\n        data = null\n    try {\n      data = JSON.parse(xhr.responseText, reviver)\n      jsonOk = true\n    } catch(e) {\n      data = xhr.responseText\n      jsonOk = false\n    }\n    if (xhr.readyState == 4 && (xhr.status == 200 || xhr.status == 302)) {\n      onSuccess(data, xhr)\n    } else {\n      onError(data, jsonOk, xhr);\n    }\n  }\n\n  xhr.onerror = () => {\n    onError()\n  }\n\n  xhr.onabort = () => {\n    console.error('xhr aborted')\n  }\n\n  xhr.open('POST', url)\n  xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n  xhr.setRequestHeader('X-Pathname', parent.window.location.pathname);\n  xhr.setRequestHeader('X-CSRFToken', getCookie('csrftoken'));\n  if (!!headers) {\n    for (let k in headers) {\n      console.log(\"Setting custom header\", k, \"to\", headers[k])\n      xhr.setRequestHeader(k, headers[k]);\n    }\n  }\n  xhr.send(formData)\n}\n\n// history support.\n\nwindow.addEventListener(\"popstate\", function(event) {\n  if (event.state && event.state.callback_url !== undefined) {\n    console.log(\"popstate to partial load\")\n    partialLoad(event, event.state.callback_url)\n  } else {\n    window.location = location.href\n  }\n})\n\nconst pushstate = new Event('hypergen.pushstate')\n\nexport const onpushstate = function() {\n  document.dispatchEvent(pushstate)\n}\n\n// On ready\n\nexport const ready = function(fn, {partial=false}={}) {\n  if (document.readyState != 'loading') {\n    fn();\n  } else if (document.addEventListener) {\n    document.addEventListener('DOMContentLoaded', fn);\n  } else {\n    document.attachEvent('onreadystatechange', function() {\n      if (document.readyState != 'loading')\n        fn();\n    });\n  }\n  if (partial) document.addEventListener(\"hypergen.pushstate\", fn)\n}\n"]}